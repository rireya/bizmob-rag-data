[
  {
    "id": "Window_openSignPad_chunk_0",
    "parentId": "Window_openSignPad",
    "chunkIndex": 0,
    "title": "Window.openSignPad",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Window.openSignPad\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nopenSignPad(arg: { _sTargetPath: string, // 사인패드 이미지 저장 경로 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n사인패드 열기",
    "metadata": {
      "module": "Window",
      "functionName": "openSignPad",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Window.ts",
      "line": 3
    }
  },
  {
    "id": "Window_resolve => {\r\n      window.bizMOB.Window.openSignPad({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Window_resolve => {\r\n      window.bizMOB.Window.openSignPad({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Window.resolve => {\r\n      window.bizMOB.Window.openSignPad({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Window.resolve => {\r\n      window.bizMOB.Window.openSignPad({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Window.openSignPad({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Window.openSignPad({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n사인패드 열기",
    "metadata": {
      "module": "Window",
      "functionName": "resolve => {\r\n      window.bizMOB.Window.openSignPad({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Window.ts",
      "line": 7
    }
  },
  {
    "id": "Window_openCodeReader_chunk_0",
    "parentId": "Window_openCodeReader",
    "chunkIndex": 0,
    "title": "Window.openCodeReader",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Window.openCodeReader\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nopenCodeReader(arg?: { _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n바코드, QR코드 리더 열기",
    "metadata": {
      "module": "Window",
      "functionName": "openCodeReader",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Window.ts",
      "line": 18
    }
  },
  {
    "id": "Window_resolve => {\r\n      window.bizMOB.Window.openCodeReader({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Window_resolve => {\r\n      window.bizMOB.Window.openCodeReader({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Window.resolve => {\r\n      window.bizMOB.Window.openCodeReader({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Window.resolve => {\r\n      window.bizMOB.Window.openCodeReader({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Window.openCodeReader({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Window.openCodeReader({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n바코드, QR코드 리더 열기",
    "metadata": {
      "module": "Window",
      "functionName": "resolve => {\r\n      window.bizMOB.Window.openCodeReader({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Window.ts",
      "line": 21
    }
  },
  {
    "id": "Window_openFileExplorer_chunk_0",
    "parentId": "Window_openFileExplorer",
    "chunkIndex": 0,
    "title": "Window.openFileExplorer",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Window.openFileExplorer\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nopenFileExplorer(arg?: { _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n파일 탐색기 열기",
    "metadata": {
      "module": "Window",
      "functionName": "openFileExplorer",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Window.ts",
      "line": 32
    }
  },
  {
    "id": "Window_resolve => {\r\n      window.bizMOB.Window.openFileExplorer({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Window_resolve => {\r\n      window.bizMOB.Window.openFileExplorer({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Window.resolve => {\r\n      window.bizMOB.Window.openFileExplorer({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Window.resolve => {\r\n      window.bizMOB.Window.openFileExplorer({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Window.openFileExplorer({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Window.openFileExplorer({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n파일 탐색기 열기",
    "metadata": {
      "module": "Window",
      "functionName": "resolve => {\r\n      window.bizMOB.Window.openFileExplorer({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Window.ts",
      "line": 35
    }
  },
  {
    "id": "Window_openImageViewer_chunk_0",
    "parentId": "Window_openImageViewer",
    "chunkIndex": 0,
    "title": "Window.openImageViewer",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Window.openImageViewer\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nopenImageViewer(arg: { _sImagePath: string, // 이미지 뷰어로 열 이미지 경로 }): Promise<Record<string, any>>\n```\n\n## 설명\n이미지 뷰어 열기",
    "metadata": {
      "module": "Window",
      "functionName": "openImageViewer",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Window.ts",
      "line": 46
    }
  },
  {
    "id": "Window_resolve => {\r\n      window.bizMOB.Window.openImageViewer({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Window_resolve => {\r\n      window.bizMOB.Window.openImageViewer({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Window.resolve => {\r\n      window.bizMOB.Window.openImageViewer({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Window.resolve => {\r\n      window.bizMOB.Window.openImageViewer({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Window.openImageViewer({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Window.openImageViewer({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n이미지 뷰어 열기",
    "metadata": {
      "module": "Window",
      "functionName": "resolve => {\r\n      window.bizMOB.Window.openImageViewer({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Window.ts",
      "line": 49
    }
  },
  {
    "id": "System_callBrowser_chunk_0",
    "parentId": "System_callBrowser",
    "chunkIndex": 0,
    "title": "System.callBrowser",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# System.callBrowser\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ncallBrowser(arg: { _sURL: string, // 호출할 URL _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<void>\n```\n\n## 설명\n단말기의 브라우저를 호출합니다.",
    "metadata": {
      "module": "System",
      "functionName": "callBrowser",
      "language": "typescript",
      "source": "libs\\typescript\\core\\System.ts",
      "line": 3
    }
  },
  {
    "id": "System_resolve => {\r\n      window.bizMOB.System.callBrowser({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "System_resolve => {\r\n      window.bizMOB.System.callBrowser({\r\n        ...arg,\r\n        _fCallback:  function(res: any",
    "chunkIndex": 0,
    "title": "System.resolve => {\r\n      window.bizMOB.System.callBrowser({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# System.resolve => {\r\n      window.bizMOB.System.callBrowser({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.System.callBrowser({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.System.callBrowser({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n단말기의 브라우저를 호출합니다.",
    "metadata": {
      "module": "System",
      "functionName": "resolve => {\r\n      window.bizMOB.System.callBrowser({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\System.ts",
      "line": 7
    }
  },
  {
    "id": "System_callCamera_chunk_0",
    "parentId": "System_callCamera",
    "chunkIndex": 0,
    "title": "System.callCamera",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# System.callCamera\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ncallCamera(arg: { _sFileName?: string, // 찍은 이미지를 저장할 이름 _sDirectory?: string, // 찍은 이미지를 저장할 경로 _bAutoVerticalHorizontal: boolean, // 찍은 이미지를 화면에 맞게 자동으로 회전시켜 저장할지를 설정하는 값 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n디바이스의 카메라를 이용하여 사진을 찍습니다.",
    "metadata": {
      "module": "System",
      "functionName": "callCamera",
      "language": "typescript",
      "source": "libs\\typescript\\core\\System.ts",
      "line": 18
    }
  },
  {
    "id": "System_resolve => {\r\n      window.bizMOB.System.callCamera({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "System_resolve => {\r\n      window.bizMOB.System.callCamera({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "System.resolve => {\r\n      window.bizMOB.System.callCamera({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# System.resolve => {\r\n      window.bizMOB.System.callCamera({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.System.callCamera({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.System.callCamera({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n디바이스의 카메라를 이용하여 사진을 찍습니다.",
    "metadata": {
      "module": "System",
      "functionName": "resolve => {\r\n      window.bizMOB.System.callCamera({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\System.ts",
      "line": 24
    }
  },
  {
    "id": "System_callGallery_chunk_0",
    "parentId": "System_callGallery",
    "chunkIndex": 0,
    "title": "System.callGallery",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# System.callGallery\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ncallGallery(arg: { _sType: 'all' | 'image' | 'video', // 러리에서 불러올 미디어 타입 _nMaxCount?: number, // 선택 가능 개수 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n디바이스의 사진앨범(갤러리)를 호출합니다.",
    "metadata": {
      "module": "System",
      "functionName": "callGallery",
      "language": "typescript",
      "source": "libs\\typescript\\core\\System.ts",
      "line": 35
    }
  },
  {
    "id": "System_resolve => {\r\n      window.bizMOB.System.callGallery({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "System_resolve => {\r\n      window.bizMOB.System.callGallery({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "System.resolve => {\r\n      window.bizMOB.System.callGallery({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# System.resolve => {\r\n      window.bizMOB.System.callGallery({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.System.callGallery({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.System.callGallery({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n디바이스의 사진앨범(갤러리)를 호출합니다.",
    "metadata": {
      "module": "System",
      "functionName": "resolve => {\r\n      window.bizMOB.System.callGallery({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\System.ts",
      "line": 40
    }
  },
  {
    "id": "System_resolve => {\r\n      window.bizMOB.System.callMap({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "System_resolve => {\r\n      window.bizMOB.System.callMap({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "System.resolve => {\r\n      window.bizMOB.System.callMap({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# System.resolve => {\r\n      window.bizMOB.System.callMap({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.System.callMap({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.System.callMap({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n디바이스의 지도(Map) 앱을 호출하여 보여줍니다.",
    "metadata": {
      "module": "System",
      "functionName": "resolve => {\r\n      window.bizMOB.System.callMap({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\System.ts",
      "line": 55
    }
  },
  {
    "id": "System_resolve => {\r\n      window.bizMOB.System.callSMS({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "System_resolve => {\r\n      window.bizMOB.System.callSMS({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "System.resolve => {\r\n      window.bizMOB.System.callSMS({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# System.resolve => {\r\n      window.bizMOB.System.callSMS({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.System.callSMS({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.System.callSMS({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n문자(SMS) 발송 화면을 열어줍니다.",
    "metadata": {
      "module": "System",
      "functionName": "resolve => {\r\n      window.bizMOB.System.callSMS({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\System.ts",
      "line": 71
    }
  },
  {
    "id": "System_resolve => {\r\n      window.bizMOB.System.callTEL({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "System_resolve => {\r\n      window.bizMOB.System.callTEL({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "System.resolve => {\r\n      window.bizMOB.System.callTEL({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# System.resolve => {\r\n      window.bizMOB.System.callTEL({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.System.callTEL({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.System.callTEL({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n디바이스의 전화걸기 기능을 수행합니다.",
    "metadata": {
      "module": "System",
      "functionName": "resolve => {\r\n      window.bizMOB.System.callTEL({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\System.ts",
      "line": 86
    }
  },
  {
    "id": "System_getGPS_chunk_0",
    "parentId": "System_getGPS",
    "chunkIndex": 0,
    "title": "System.getGPS",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# System.getGPS\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetGPS(arg?: { _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n디바이스의 현재 GPS정보를 가져옵니다.",
    "metadata": {
      "module": "System",
      "functionName": "getGPS",
      "language": "typescript",
      "source": "libs\\typescript\\core\\System.ts",
      "line": 97
    }
  },
  {
    "id": "System_resolve => {\r\n      window.bizMOB.System.getGPS({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "System_resolve => {\r\n      window.bizMOB.System.getGPS({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "System.resolve => {\r\n      window.bizMOB.System.getGPS({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# System.resolve => {\r\n      window.bizMOB.System.getGPS({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.System.getGPS({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.System.getGPS({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n디바이스의 현재 GPS정보를 가져옵니다.",
    "metadata": {
      "module": "System",
      "functionName": "resolve => {\r\n      window.bizMOB.System.getGPS({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\System.ts",
      "line": 100
    }
  },
  {
    "id": "Storage_get_chunk_0",
    "parentId": "Storage_get",
    "chunkIndex": 0,
    "title": "Storage.get",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Storage.get\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nget(arg: { _sKey: string, // Storage 에서 가져올 키 값 }): any\n```\n\n## 설명\nStorage 조회",
    "metadata": {
      "module": "Storage",
      "functionName": "get",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Storage.ts",
      "line": 4
    }
  },
  {
    "id": "Storage_remove_chunk_0",
    "parentId": "Storage_remove",
    "chunkIndex": 0,
    "title": "Storage.remove",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Storage.remove\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nremove(arg: { _sKey: string, // Storage 에서 삭제할 키 값 }): void\n```\n\n## 설명\nStorage 제거",
    "metadata": {
      "module": "Storage",
      "functionName": "remove",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Storage.ts",
      "line": 13
    }
  },
  {
    "id": "Storage_set_chunk_0",
    "parentId": "Storage_set",
    "chunkIndex": 0,
    "title": "Storage.set",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Storage.set\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nset(arg: { _sKey: string, // Storage 에 저장할 키 값 _vValue: any, // Storage 에 저장할 값 }): void\n```\n\n## 설명\nStorage 저장 (단일)",
    "metadata": {
      "module": "Storage",
      "functionName": "set",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Storage.ts",
      "line": 22
    }
  },
  {
    "id": "Storage_setList_chunk_0",
    "parentId": "Storage_setList",
    "chunkIndex": 0,
    "title": "Storage.setList",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Storage.setList\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nsetList(arg: { _aList: { _sKey: string, // Storage 에 저장할 키 값 _vValue: any, // Storage 에 저장할 값 }[] }): void\n```\n\n## 설명\nStorage 저장 (복수)",
    "metadata": {
      "module": "Storage",
      "functionName": "setList",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Storage.ts",
      "line": 32
    }
  },
  {
    "id": "Push_getAlarm_chunk_0",
    "parentId": "Push_getAlarm",
    "chunkIndex": 0,
    "title": "Push.getAlarm",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.getAlarm\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetAlarm(arg: { _sUserId: string, // 푸시 알림이 설정된 사용자 아이디 _bProgressEnable?: boolean, // 푸시 서버와 통신 중일때 화면에 progress 를 표시할지에 대한 여부 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n푸시 서버로부터 설정된 푸시 알람을 가져옵니다.",
    "metadata": {
      "module": "Push",
      "functionName": "getAlarm",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 3
    }
  },
  {
    "id": "Push_resolve => {\r\n      window.bizMOB.Push.getAlarm({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Push_resolve => {\r\n      window.bizMOB.Push.getAlarm({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Push.resolve => {\r\n      window.bizMOB.Push.getAlarm({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.resolve => {\r\n      window.bizMOB.Push.getAlarm({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Push.getAlarm({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Push.getAlarm({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n푸시 서버로부터 설정된 푸시 알람을 가져옵니다.",
    "metadata": {
      "module": "Push",
      "functionName": "resolve => {\r\n      window.bizMOB.Push.getAlarm({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 8
    }
  },
  {
    "id": "Push_getMessageList_chunk_0",
    "parentId": "Push_getMessageList",
    "chunkIndex": 0,
    "title": "Push.getMessageList",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.getMessageList\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetMessageList(arg: { _sUserId: string, // 푸시 메세지를 가져올 사용자 이이디 _nPageIndex: number, // 푸시 메세지를 가져올 페이지 번호 _nItemCount: number, // 해당 페이지에서 가져올 푸시 메세지 갯수 _sAppName: string, // 푸시 메세지를 가져올 앱 이름 _bProgressEnable?: boolean, // 푸시 서버와 통신 중일때 화면에 progress 를 표시할지에 대한 여부 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n푸시 메세지 목록을 가져옵니다.",
    "metadata": {
      "module": "Push",
      "functionName": "getMessageList",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 19
    }
  },
  {
    "id": "Push_resolve => {\r\n      window.bizMOB.Push.getMessageList({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Push_resolve => {\r\n      window.bizMOB.Push.getMessageList({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Push.resolve => {\r\n      window.bizMOB.Push.getMessageList({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.resolve => {\r\n      window.bizMOB.Push.getMessageList({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Push.getMessageList({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Push.getMessageList({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n푸시 메세지 목록을 가져옵니다.",
    "metadata": {
      "module": "Push",
      "functionName": "resolve => {\r\n      window.bizMOB.Push.getMessageList({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 27
    }
  },
  {
    "id": "Push_getPushKey_chunk_0",
    "parentId": "Push_getPushKey",
    "chunkIndex": 0,
    "title": "Push.getPushKey",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.getPushKey\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetPushKey(arg?: { _bProgressEnable?: boolean, // 푸시 서버와 통신 중일때 화면에 progress 를 표시할지에 대한 여부 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n푸시키를 받아옵니다.",
    "metadata": {
      "module": "Push",
      "functionName": "getPushKey",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 38
    }
  },
  {
    "id": "Push_resolve => {\r\n      window.bizMOB.Push.getPushKey({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Push_resolve => {\r\n      window.bizMOB.Push.getPushKey({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Push.resolve => {\r\n      window.bizMOB.Push.getPushKey({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.resolve => {\r\n      window.bizMOB.Push.getPushKey({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Push.getPushKey({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Push.getPushKey({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n푸시키를 받아옵니다.",
    "metadata": {
      "module": "Push",
      "functionName": "resolve => {\r\n      window.bizMOB.Push.getPushKey({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 42
    }
  },
  {
    "id": "Push_getUnreadCount_chunk_0",
    "parentId": "Push_getUnreadCount",
    "chunkIndex": 0,
    "title": "Push.getUnreadCount",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.getUnreadCount\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetUnreadCount(arg: { _sUserId: string, // 읽지 않은 메세지를 가져올 사용자 아이디 _sAppName: string, // 푸시 메세지를 가져올 앱 이름 _bProgressEnable?: boolean, // 푸시 서버와 통신 중일때 화면에 progress 를 표시할지에 대한 여부 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n읽지 않은 푸시 메세지 갯수를 가져옵니다.",
    "metadata": {
      "module": "Push",
      "functionName": "getUnreadCount",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 53
    }
  },
  {
    "id": "Push_resolve => {\r\n      window.bizMOB.Push.getUnreadCount({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Push_resolve => {\r\n      window.bizMOB.Push.getUnreadCount({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Push.resolve => {\r\n      window.bizMOB.Push.getUnreadCount({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.resolve => {\r\n      window.bizMOB.Push.getUnreadCount({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Push.getUnreadCount({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Push.getUnreadCount({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n읽지 않은 푸시 메세지 갯수를 가져옵니다.",
    "metadata": {
      "module": "Push",
      "functionName": "resolve => {\r\n      window.bizMOB.Push.getUnreadCount({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 59
    }
  },
  {
    "id": "Push_resolve => {\r\n      window.bizMOB.Push.readMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Push_resolve => {\r\n      window.bizMOB.Push.readMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Push.resolve => {\r\n      window.bizMOB.Push.readMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.resolve => {\r\n      window.bizMOB.Push.readMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Push.readMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Push.readMessage({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n푸시 메세지를 읽음 처리 합니다.",
    "metadata": {
      "module": "Push",
      "functionName": "resolve => {\r\n      window.bizMOB.Push.readMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 77
    }
  },
  {
    "id": "Push_readReceiptMessage_chunk_0",
    "parentId": "Push_readReceiptMessage",
    "chunkIndex": 0,
    "title": "Push.readReceiptMessage",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.readReceiptMessage\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nreadReceiptMessage(arg: { _sUserId: string, // 수신받은 메세지를 조회할 사용자 아이디 _sMessageId: string, // 조회할 수신 메시지의 아이디 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n수신받은 푸시 메세지의 상세 정보를 조회합니다.",
    "metadata": {
      "module": "Push",
      "functionName": "readReceiptMessage",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 88
    }
  },
  {
    "id": "Push_resolve => {\r\n      window.bizMOB.Push.readReceiptMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Push_resolve => {\r\n      window.bizMOB.Push.readReceiptMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Push.resolve => {\r\n      window.bizMOB.Push.readReceiptMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.resolve => {\r\n      window.bizMOB.Push.readReceiptMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Push.readReceiptMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Push.readReceiptMessage({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n수신받은 푸시 메세지의 상세 정보를 조회합니다.",
    "metadata": {
      "module": "Push",
      "functionName": "resolve => {\r\n      window.bizMOB.Push.readReceiptMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 93
    }
  },
  {
    "id": "Push_resolve => {\r\n      window.bizMOB.Push.registerToServer({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Push_resolve => {\r\n      window.bizMOB.Push.registerToServer({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Push.resolve => {\r\n      window.bizMOB.Push.registerToServer({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.resolve => {\r\n      window.bizMOB.Push.registerToServer({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Push.registerToServer({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Push.registerToServer({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n푸시키를 서버에 등록합니다.",
    "metadata": {
      "module": "Push",
      "functionName": "resolve => {\r\n      window.bizMOB.Push.registerToServer({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 111
    }
  },
  {
    "id": "Push_reset_chunk_0",
    "parentId": "Push_reset",
    "chunkIndex": 0,
    "title": "Push.reset",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.reset\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nreset(): Promise<Record<string, any>>\n```\n\n## 설명\n디바이스에 저장된 푸시 등록 관련 정보를 리셋합니다.",
    "metadata": {
      "module": "Push",
      "functionName": "reset",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 122
    }
  },
  {
    "id": "Push_resolve => {\r\n      window.bizMOB.Push.reset({\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Push_resolve => {\r\n      window.bizMOB.Push.reset({\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Push.resolve => {\r\n      window.bizMOB.Push.reset({\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.resolve => {\r\n      window.bizMOB.Push.reset({\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Push.reset({\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Push.reset({ _fCallback: function(res: any)\n```\n\n## 설명\n디바이스에 저장된 푸시 등록 관련 정보를 리셋합니다.",
    "metadata": {
      "module": "Push",
      "functionName": "resolve => {\r\n      window.bizMOB.Push.reset({\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 123
    }
  },
  {
    "id": "Push_resolve => {\r\n      window.bizMOB.Push.sendMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Push_resolve => {\r\n      window.bizMOB.Push.sendMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Push.resolve => {\r\n      window.bizMOB.Push.sendMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.resolve => {\r\n      window.bizMOB.Push.sendMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Push.sendMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Push.sendMessage({ ...arg, _fCallback: function(res: any)\n```",
    "metadata": {
      "module": "Push",
      "functionName": "resolve => {\r\n      window.bizMOB.Push.sendMessage({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 148
    }
  },
  {
    "id": "Push_setAlarm_chunk_0",
    "parentId": "Push_setAlarm",
    "chunkIndex": 0,
    "title": "Push.setAlarm",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.setAlarm\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nsetAlarm(arg: { _sUserId: string, // 푸시 알람을 설정할 사용자 이이디 _bEnabled: boolean, // 알람 설정 값입니다. true와 false로 설정이 가능 _bProgressEnable?: boolean, // 푸시 서버와 통신 중일때 화면에 progress 를 표시할지에 대한 여부 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n푸시 알람을 설정합니다.",
    "metadata": {
      "module": "Push",
      "functionName": "setAlarm",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 159
    }
  },
  {
    "id": "Push_resolve => {\r\n      window.bizMOB.Push.setAlarm({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Push_resolve => {\r\n      window.bizMOB.Push.setAlarm({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Push.resolve => {\r\n      window.bizMOB.Push.setAlarm({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.resolve => {\r\n      window.bizMOB.Push.setAlarm({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Push.setAlarm({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Push.setAlarm({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n푸시 알람을 설정합니다.",
    "metadata": {
      "module": "Push",
      "functionName": "resolve => {\r\n      window.bizMOB.Push.setAlarm({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 165
    }
  },
  {
    "id": "Push_resolve => {\r\n      window.bizMOB.Push.setBadgeCount({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Push_resolve => {\r\n      window.bizMOB.Push.setBadgeCount({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Push.resolve => {\r\n      window.bizMOB.Push.setBadgeCount({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Push.resolve => {\r\n      window.bizMOB.Push.setBadgeCount({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Push.setBadgeCount({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Push.setBadgeCount({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n벳지 카운트를 설정합니다.",
    "metadata": {
      "module": "Push",
      "functionName": "resolve => {\r\n      window.bizMOB.Push.setBadgeCount({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Push.ts",
      "line": 180
    }
  },
  {
    "id": "Properties_get_chunk_0",
    "parentId": "Properties_get",
    "chunkIndex": 0,
    "title": "Properties.get",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Properties.get\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nget(arg: { _sKey: string, // Property에서 가져올 키 값 }): any\n```\n\n## 설명\nProperties 조회",
    "metadata": {
      "module": "Properties",
      "functionName": "get",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Properties.ts",
      "line": 4
    }
  },
  {
    "id": "Properties_remove_chunk_0",
    "parentId": "Properties_remove",
    "chunkIndex": 0,
    "title": "Properties.remove",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Properties.remove\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nremove(arg: { _sKey: string, // Property에서 삭제할 키 값 }): void\n```\n\n## 설명\nProperties 제거",
    "metadata": {
      "module": "Properties",
      "functionName": "remove",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Properties.ts",
      "line": 13
    }
  },
  {
    "id": "Properties_set_chunk_0",
    "parentId": "Properties_set",
    "chunkIndex": 0,
    "title": "Properties.set",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Properties.set\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nset(arg: { _sKey: string, // Property에 저장할 키 값 _vValue: any, // Property에 저장할 값 }): void\n```\n\n## 설명\nProperties 저장 (단일)",
    "metadata": {
      "module": "Properties",
      "functionName": "set",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Properties.ts",
      "line": 22
    }
  },
  {
    "id": "Properties_setList_chunk_0",
    "parentId": "Properties_setList",
    "chunkIndex": 0,
    "title": "Properties.setList",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Properties.setList\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nsetList(arg: { _aList: { _sKey: string, // Property에 저장할 키 값 _vValue: any, // Property에 저장할 값 }[] }): void\n```\n\n## 설명\nProperties 저장 (복수)",
    "metadata": {
      "module": "Properties",
      "functionName": "setList",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Properties.ts",
      "line": 32
    }
  },
  {
    "id": "Network_resolve => {\r\n      window.bizMOB.Network.requestLogin({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Network_resolve => {\r\n      window.bizMOB.Network.requestLogin({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Network.resolve => {\r\n      window.bizMOB.Network.requestLogin({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Network.resolve => {\r\n      window.bizMOB.Network.requestLogin({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Network.requestLogin({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Network.requestLogin({ ...arg, _fCallback: function(res: any)\n```",
    "metadata": {
      "module": "Network",
      "functionName": "resolve => {\r\n      window.bizMOB.Network.requestLogin({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Network.ts",
      "line": 28
    }
  },
  {
    "id": "Network_resolve => {\r\n      window.bizMOB.Network.requestTr({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Network_resolve => {\r\n      window.bizMOB.Network.requestTr({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Network.resolve => {\r\n      window.bizMOB.Network.requestTr({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Network.resolve => {\r\n      window.bizMOB.Network.requestTr({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Network.requestTr({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Network.requestTr({ ...arg, _fCallback: function(res: any)\n```",
    "metadata": {
      "module": "Network",
      "functionName": "resolve => {\r\n      window.bizMOB.Network.requestTr({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Network.ts",
      "line": 49
    }
  },
  {
    "id": "Network_resolve => {\r\n      window.bizMOB.Network.requestHttp({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Network_resolve => {\r\n      window.bizMOB.Network.requestHttp({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Network.resolve => {\r\n      window.bizMOB.Network.requestHttp({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Network.resolve => {\r\n      window.bizMOB.Network.requestHttp({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Network.requestHttp({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Network.requestHttp({ ...arg, _fCallback: function(res: any)\n```",
    "metadata": {
      "module": "Network",
      "functionName": "resolve => {\r\n      window.bizMOB.Network.requestHttp({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Network.ts",
      "line": 69
    }
  },
  {
    "id": "Network_resolve => {\r\n      window.bizMOB.Http.request({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Network_resolve => {\r\n      window.bizMOB.Http.request({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Network.resolve => {\r\n      window.bizMOB.Http.request({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Network.resolve => {\r\n      window.bizMOB.Http.request({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Http.request({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Http.request({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\nWeb 통신 (웹 단독)",
    "metadata": {
      "module": "Network",
      "functionName": "resolve => {\r\n      window.bizMOB.Http.request({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Network.ts",
      "line": 88
    }
  },
  {
    "id": "Logger_info_chunk_0",
    "parentId": "Logger_info",
    "chunkIndex": 0,
    "title": "Logger.info",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Logger.info\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ninfo(_sMessage: string): void\n```\n\n## 설명\ninfo Level 로그",
    "metadata": {
      "module": "Logger",
      "functionName": "info",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Logger.ts",
      "line": 3
    }
  },
  {
    "id": "Logger_log_chunk_0",
    "parentId": "Logger_log",
    "chunkIndex": 0,
    "title": "Logger.log",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Logger.log\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nlog(_sMessage: string): void\n```\n\n## 설명\ninfo Level 로그",
    "metadata": {
      "module": "Logger",
      "functionName": "log",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Logger.ts",
      "line": 8
    }
  },
  {
    "id": "Logger_warn_chunk_0",
    "parentId": "Logger_warn",
    "chunkIndex": 0,
    "title": "Logger.warn",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Logger.warn\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nwarn(_sMessage: string): void\n```\n\n## 설명\nlog Level 로그",
    "metadata": {
      "module": "Logger",
      "functionName": "warn",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Logger.ts",
      "line": 13
    }
  },
  {
    "id": "Logger_debug_chunk_0",
    "parentId": "Logger_debug",
    "chunkIndex": 0,
    "title": "Logger.debug",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Logger.debug\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ndebug(_sMessage: string): void\n```\n\n## 설명\nwarn Level 로그",
    "metadata": {
      "module": "Logger",
      "functionName": "debug",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Logger.ts",
      "line": 18
    }
  },
  {
    "id": "Logger_error_chunk_0",
    "parentId": "Logger_error",
    "chunkIndex": 0,
    "title": "Logger.error",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Logger.error\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nerror(_sMessage: string): void\n```\n\n## 설명\ndebug Level 로그",
    "metadata": {
      "module": "Logger",
      "functionName": "error",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Logger.ts",
      "line": 23
    }
  },
  {
    "id": "Localization_getLocale_chunk_0",
    "parentId": "Localization_getLocale",
    "chunkIndex": 0,
    "title": "Localization.getLocale",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Localization.getLocale\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetLocale(arg?: { _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\nLocale 조회",
    "metadata": {
      "module": "Localization",
      "functionName": "getLocale",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Localization.ts",
      "line": 3
    }
  },
  {
    "id": "File_copy_chunk_0",
    "parentId": "File_copy",
    "chunkIndex": 0,
    "title": "File.copy",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.copy\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ncopy(arg: { _sSourcePath: string, // 복사할 파일의 경로 _sTargetPath: string, // 복사될 경로 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n파일 복사",
    "metadata": {
      "module": "File",
      "functionName": "copy",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 3
    }
  },
  {
    "id": "File_resolve => {\r\n      window.bizMOB.File.copy({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "File_resolve => {\r\n      window.bizMOB.File.copy({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "File.resolve => {\r\n      window.bizMOB.File.copy({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.resolve => {\r\n      window.bizMOB.File.copy({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.File.copy({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.File.copy({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n파일 복사",
    "metadata": {
      "module": "File",
      "functionName": "resolve => {\r\n      window.bizMOB.File.copy({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 8
    }
  },
  {
    "id": "File_directory_chunk_0",
    "parentId": "File_directory",
    "chunkIndex": 0,
    "title": "File.directory",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.directory\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ndirectory(arg: { _sDirectory: string, // 디렉토리 경로 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n디렉토리 정보 조회",
    "metadata": {
      "module": "File",
      "functionName": "directory",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 19
    }
  },
  {
    "id": "File_resolve => {\r\n      window.bizMOB.File.directory({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "File_resolve => {\r\n      window.bizMOB.File.directory({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "File.resolve => {\r\n      window.bizMOB.File.directory({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.resolve => {\r\n      window.bizMOB.File.directory({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.File.directory({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.File.directory({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n디렉토리 정보 조회",
    "metadata": {
      "module": "File",
      "functionName": "resolve => {\r\n      window.bizMOB.File.directory({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 23
    }
  },
  {
    "id": "File_resolve => {\r\n      window.bizMOB.File.download({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "File_resolve => {\r\n      window.bizMOB.File.download({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "File.resolve => {\r\n      window.bizMOB.File.download({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.resolve => {\r\n      window.bizMOB.File.download({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.File.download({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.File.download({ ...arg, _fCallback: function(res: any)\n```",
    "metadata": {
      "module": "File",
      "functionName": "resolve => {\r\n      window.bizMOB.File.download({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 45
    }
  },
  {
    "id": "File_exist_chunk_0",
    "parentId": "File_exist",
    "chunkIndex": 0,
    "title": "File.exist",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.exist\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nexist(arg: { _sSourcePath: string, // 존재 여부를 확인할 파일 경로 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n파일 존재여부 확인",
    "metadata": {
      "module": "File",
      "functionName": "exist",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 56
    }
  },
  {
    "id": "File_resolve => {\r\n      window.bizMOB.File.exist({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "File_resolve => {\r\n      window.bizMOB.File.exist({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "File.resolve => {\r\n      window.bizMOB.File.exist({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.resolve => {\r\n      window.bizMOB.File.exist({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.File.exist({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.File.exist({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n파일 존재여부 확인",
    "metadata": {
      "module": "File",
      "functionName": "resolve => {\r\n      window.bizMOB.File.exist({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 60
    }
  },
  {
    "id": "File_getInfo_chunk_0",
    "parentId": "File_getInfo",
    "chunkIndex": 0,
    "title": "File.getInfo",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.getInfo\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetInfo(arg: { _aFileList: { _sSourcePath: string, // 파일의 경로 }[], _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>[]>\n```\n\n## 설명\n파일 정보 조회",
    "metadata": {
      "module": "File",
      "functionName": "getInfo",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 71
    }
  },
  {
    "id": "File_resolve => {\r\n      window.bizMOB.File.getInfo({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "File_resolve => {\r\n      window.bizMOB.File.getInfo({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "File.resolve => {\r\n      window.bizMOB.File.getInfo({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.resolve => {\r\n      window.bizMOB.File.getInfo({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.File.getInfo({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.File.getInfo({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n파일 정보 조회",
    "metadata": {
      "module": "File",
      "functionName": "resolve => {\r\n      window.bizMOB.File.getInfo({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 77
    }
  },
  {
    "id": "File_move_chunk_0",
    "parentId": "File_move",
    "chunkIndex": 0,
    "title": "File.move",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.move\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nmove(arg: { _sSourcePath: string, // 이동할 파일의 경로 _sTargetPath: string, // 이동될 경로 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n파일 이동",
    "metadata": {
      "module": "File",
      "functionName": "move",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 88
    }
  },
  {
    "id": "File_resolve => {\r\n      window.bizMOB.File.move({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "File_resolve => {\r\n      window.bizMOB.File.move({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "File.resolve => {\r\n      window.bizMOB.File.move({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.resolve => {\r\n      window.bizMOB.File.move({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.File.move({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.File.move({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n파일 이동",
    "metadata": {
      "module": "File",
      "functionName": "resolve => {\r\n      window.bizMOB.File.move({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 93
    }
  },
  {
    "id": "File_open_chunk_0",
    "parentId": "File_open",
    "chunkIndex": 0,
    "title": "File.open",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.open\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nopen(arg: { _sSourcePath: string, // 열어서 보여줄 대상 파일 경로 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n파일 Open",
    "metadata": {
      "module": "File",
      "functionName": "open",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 104
    }
  },
  {
    "id": "File_resolve => {\r\n      window.bizMOB.File.open({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "File_resolve => {\r\n      window.bizMOB.File.open({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "File.resolve => {\r\n      window.bizMOB.File.open({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.resolve => {\r\n      window.bizMOB.File.open({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.File.open({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.File.open({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n파일 Open",
    "metadata": {
      "module": "File",
      "functionName": "resolve => {\r\n      window.bizMOB.File.open({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 108
    }
  },
  {
    "id": "File_remove_chunk_0",
    "parentId": "File_remove",
    "chunkIndex": 0,
    "title": "File.remove",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.remove\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nremove(arg: { _aSourcePath: string[], // 삭제할 파일목록 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n파일 삭제",
    "metadata": {
      "module": "File",
      "functionName": "remove",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 119
    }
  },
  {
    "id": "File_resolve => {\r\n      window.bizMOB.File.remove({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "File_resolve => {\r\n      window.bizMOB.File.remove({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "File.resolve => {\r\n      window.bizMOB.File.remove({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.resolve => {\r\n      window.bizMOB.File.remove({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.File.remove({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.File.remove({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n파일 삭제",
    "metadata": {
      "module": "File",
      "functionName": "resolve => {\r\n      window.bizMOB.File.remove({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 123
    }
  },
  {
    "id": "File_resizeImage_chunk_0",
    "parentId": "File_resizeImage",
    "chunkIndex": 0,
    "title": "File.resizeImage",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.resizeImage\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresizeImage(arg: { _aFileList: { _sSourcePath: string }[], _bIsCopy: boolean, // 파일 Copy 여부 _sTargetDirectory: string, // 리사이즈 파일 경로 _nCompressRate: number, // 파일 축소 비율 _nWidth: number, // width 변경 값 _nHeight: number, // height 변경 값 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n이미지 리사이즈",
    "metadata": {
      "module": "File",
      "functionName": "resizeImage",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 134
    }
  },
  {
    "id": "File_resolve => {\r\n      window.bizMOB.File.resizeImage({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "File_resolve => {\r\n      window.bizMOB.File.resizeImage({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "File.resolve => {\r\n      window.bizMOB.File.resizeImage({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.resolve => {\r\n      window.bizMOB.File.resizeImage({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.File.resizeImage({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.File.resizeImage({ ...arg, _fCallback: function(res: any)\n```",
    "metadata": {
      "module": "File",
      "functionName": "resolve => {\r\n      window.bizMOB.File.resizeImage({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 145
    }
  },
  {
    "id": "File_resolve => {\r\n      window.bizMOB.File.rotateImage({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "File_resolve => {\r\n      window.bizMOB.File.rotateImage({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "File.resolve => {\r\n      window.bizMOB.File.rotateImage({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.resolve => {\r\n      window.bizMOB.File.rotateImage({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.File.rotateImage({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.File.rotateImage({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n파일 회전",
    "metadata": {
      "module": "File",
      "functionName": "resolve => {\r\n      window.bizMOB.File.rotateImage({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 162
    }
  },
  {
    "id": "File_unzip_chunk_0",
    "parentId": "File_unzip",
    "chunkIndex": 0,
    "title": "File.unzip",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.unzip\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nunzip(arg: { _sSourcePath: string, // 회전시킬 이미지 파일 경로 _sDirectory: string, // 디렉토리 경로 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n파일 압축풀기",
    "metadata": {
      "module": "File",
      "functionName": "unzip",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 173
    }
  },
  {
    "id": "File_resolve => {\r\n      window.bizMOB.File.unzip({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "File_resolve => {\r\n      window.bizMOB.File.unzip({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "File.resolve => {\r\n      window.bizMOB.File.unzip({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.resolve => {\r\n      window.bizMOB.File.unzip({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.File.unzip({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.File.unzip({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n파일 압축풀기",
    "metadata": {
      "module": "File",
      "functionName": "resolve => {\r\n      window.bizMOB.File.unzip({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 178
    }
  },
  {
    "id": "File_upload_chunk_0",
    "parentId": "File_upload",
    "chunkIndex": 0,
    "title": "File.upload",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.upload\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nupload(arg: { _aFileList: { _sSourcePath: string, // 업로드할 파일의 경로 _sFileName: string, // 업로드할 파일의 이름 }[], _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n파일 업로드",
    "metadata": {
      "module": "File",
      "functionName": "upload",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 189
    }
  },
  {
    "id": "File_resolve => {\r\n      window.bizMOB.File.upload({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "File_resolve => {\r\n      window.bizMOB.File.upload({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "File.resolve => {\r\n      window.bizMOB.File.upload({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.resolve => {\r\n      window.bizMOB.File.upload({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.File.upload({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.File.upload({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n파일 업로드",
    "metadata": {
      "module": "File",
      "functionName": "resolve => {\r\n      window.bizMOB.File.upload({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 196
    }
  },
  {
    "id": "File_zip_chunk_0",
    "parentId": "File_zip",
    "chunkIndex": 0,
    "title": "File.zip",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.zip\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nzip(arg: { _sSourcePath: string, // 압축할 파일의 경로 _sTargetPath: string, // 압축된 파일이 저장될 경로 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n파일 풀기",
    "metadata": {
      "module": "File",
      "functionName": "zip",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 207
    }
  },
  {
    "id": "File_resolve => {\r\n      window.bizMOB.File.zip({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "File_resolve => {\r\n      window.bizMOB.File.zip({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "File.resolve => {\r\n      window.bizMOB.File.zip({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# File.resolve => {\r\n      window.bizMOB.File.zip({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.File.zip({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.File.zip({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n파일 풀기",
    "metadata": {
      "module": "File",
      "functionName": "resolve => {\r\n      window.bizMOB.File.zip({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\File.ts",
      "line": 212
    }
  },
  {
    "id": "Event_setEvent_chunk_0",
    "parentId": "Event_setEvent",
    "chunkIndex": 0,
    "title": "Event.setEvent",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Event.setEvent\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nsetEvent(sEvent: string, fCallback: any): void\n```\n\n## 설명\nNative 이벤트 설정 (기존 이벤트 목록 덮어쓰기)\n\n## 매개변수\n- **sEvent** : Native 이벤트 명\n- **fCallback** : Callback 함수 or 이름",
    "metadata": {
      "module": "Event",
      "functionName": "setEvent",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Event.ts",
      "line": 18
    }
  },
  {
    "id": "Event_clearEvent_chunk_0",
    "parentId": "Event_clearEvent",
    "chunkIndex": 0,
    "title": "Event.clearEvent",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Event.clearEvent\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nclearEvent(sEvent: string): void\n```\n\n## 설명\nNative 이벤트 전체 제거\n\n## 매개변수\n- **sEvent** : Native 이벤트 명",
    "metadata": {
      "module": "Event",
      "functionName": "clearEvent",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Event.ts",
      "line": 26
    }
  },
  {
    "id": "Device_getInfo_chunk_0",
    "parentId": "Device_getInfo",
    "chunkIndex": 0,
    "title": "Device.getInfo",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Device.getInfo\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetInfo(arg?: { _sKey: string // Device Info Key })\n```\n\n## 설명\n디바이스 정보 조회",
    "metadata": {
      "module": "Device",
      "functionName": "getInfo",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Device.ts",
      "line": 3
    }
  },
  {
    "id": "Device_arg_chunk_0",
    "parentId": "Device_arg",
    "chunkIndex": 0,
    "title": "Device.arg",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Device.arg\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\narg(window.bizMOB.Device.getInfo(); } /** App 판단 여부 */ static isApp())\n```\n\n## 설명\n디바이스 정보 조회",
    "metadata": {
      "module": "Device",
      "functionName": "arg",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Device.ts",
      "line": 6
    }
  },
  {
    "id": "Device_isMobile_chunk_0",
    "parentId": "Device_isMobile",
    "chunkIndex": 0,
    "title": "Device.isMobile",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Device.isMobile\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nisMobile()\n```\n\n## 설명\nWeb 판단 여부",
    "metadata": {
      "module": "Device",
      "functionName": "isMobile",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Device.ts",
      "line": 20
    }
  },
  {
    "id": "Device_isAndroid_chunk_0",
    "parentId": "Device_isAndroid",
    "chunkIndex": 0,
    "title": "Device.isAndroid",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Device.isAndroid\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nisAndroid()\n```\n\n## 설명\nPC 판단 여부",
    "metadata": {
      "module": "Device",
      "functionName": "isAndroid",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Device.ts",
      "line": 30
    }
  },
  {
    "id": "Database_beginTransaction_chunk_0",
    "parentId": "Database_beginTransaction",
    "chunkIndex": 0,
    "title": "Database.beginTransaction",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.beginTransaction\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nbeginTransaction(arg?: { _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n트랜잭션을 시작합니다.",
    "metadata": {
      "module": "Database",
      "functionName": "beginTransaction",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 3
    }
  },
  {
    "id": "Database_resolve => {\r\n      window.bizMOB.Database.beginTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Database_resolve => {\r\n      window.bizMOB.Database.beginTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Database.resolve => {\r\n      window.bizMOB.Database.beginTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.resolve => {\r\n      window.bizMOB.Database.beginTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Database.beginTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Database.beginTransaction({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n트랜잭션을 시작합니다.",
    "metadata": {
      "module": "Database",
      "functionName": "resolve => {\r\n      window.bizMOB.Database.beginTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 6
    }
  },
  {
    "id": "Database_closeDatabase_chunk_0",
    "parentId": "Database_closeDatabase",
    "chunkIndex": 0,
    "title": "Database.closeDatabase",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.closeDatabase\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ncloseDatabase(arg?: { _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n사용중인 SQlite 데이터베이스를 닫아줍니다.",
    "metadata": {
      "module": "Database",
      "functionName": "closeDatabase",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 17
    }
  },
  {
    "id": "Database_resolve => {\r\n      window.bizMOB.Database.closeDatabase({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Database_resolve => {\r\n      window.bizMOB.Database.closeDatabase({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Database.resolve => {\r\n      window.bizMOB.Database.closeDatabase({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.resolve => {\r\n      window.bizMOB.Database.closeDatabase({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Database.closeDatabase({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Database.closeDatabase({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n사용중인 SQlite 데이터베이스를 닫아줍니다.",
    "metadata": {
      "module": "Database",
      "functionName": "resolve => {\r\n      window.bizMOB.Database.closeDatabase({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 20
    }
  },
  {
    "id": "Database_commitTransaction_chunk_0",
    "parentId": "Database_commitTransaction",
    "chunkIndex": 0,
    "title": "Database.commitTransaction",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.commitTransaction\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ncommitTransaction(arg?: { _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n트랜잭션을 커밋합니다.",
    "metadata": {
      "module": "Database",
      "functionName": "commitTransaction",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 31
    }
  },
  {
    "id": "Database_resolve => {\r\n      window.bizMOB.Database.commitTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Database_resolve => {\r\n      window.bizMOB.Database.commitTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Database.resolve => {\r\n      window.bizMOB.Database.commitTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.resolve => {\r\n      window.bizMOB.Database.commitTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Database.commitTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Database.commitTransaction({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n트랜잭션을 커밋합니다.",
    "metadata": {
      "module": "Database",
      "functionName": "resolve => {\r\n      window.bizMOB.Database.commitTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 34
    }
  },
  {
    "id": "Database_executeBatchSql_chunk_0",
    "parentId": "Database_executeBatchSql",
    "chunkIndex": 0,
    "title": "Database.executeBatchSql",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.executeBatchSql\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nexecuteBatchSql(arg: { _sQuery: string, // SQL 쿼리문 _aBindingValues?: string, // SQL 쿼리문의 바인딩 값 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\nSQL쿼리문을 일괄 실행합니다.",
    "metadata": {
      "module": "Database",
      "functionName": "executeBatchSql",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 45
    }
  },
  {
    "id": "Database_resolve => {\r\n      window.bizMOB.Database.executeBatchSql({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Database_resolve => {\r\n      window.bizMOB.Database.executeBatchSql({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Database.resolve => {\r\n      window.bizMOB.Database.executeBatchSql({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.resolve => {\r\n      window.bizMOB.Database.executeBatchSql({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Database.executeBatchSql({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Database.executeBatchSql({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\nSQL쿼리문을 일괄 실행합니다.",
    "metadata": {
      "module": "Database",
      "functionName": "resolve => {\r\n      window.bizMOB.Database.executeBatchSql({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 50
    }
  },
  {
    "id": "Database_executeSelect_chunk_0",
    "parentId": "Database_executeSelect",
    "chunkIndex": 0,
    "title": "Database.executeSelect",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.executeSelect\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nexecuteSelect(arg: { _sQuery: string, // SQL 쿼리문 _aBindingValues?: string, // SQL 쿼리문의 바인딩 값 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\nSELECT SQL쿼리문을 실행합니다.",
    "metadata": {
      "module": "Database",
      "functionName": "executeSelect",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 61
    }
  },
  {
    "id": "Database_resolve => {\r\n      window.bizMOB.Database.executeSelect({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Database_resolve => {\r\n      window.bizMOB.Database.executeSelect({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Database.resolve => {\r\n      window.bizMOB.Database.executeSelect({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.resolve => {\r\n      window.bizMOB.Database.executeSelect({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Database.executeSelect({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Database.executeSelect({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\nSELECT SQL쿼리문을 실행합니다.",
    "metadata": {
      "module": "Database",
      "functionName": "resolve => {\r\n      window.bizMOB.Database.executeSelect({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 66
    }
  },
  {
    "id": "Database_executeSql_chunk_0",
    "parentId": "Database_executeSql",
    "chunkIndex": 0,
    "title": "Database.executeSql",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.executeSql\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nexecuteSql(arg: { _sQuery: string, // SQL 쿼리문 _aBindingValues?: string, // SQL 쿼리문의 바인딩 값 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\nSQL쿼리문을 실행합니다.",
    "metadata": {
      "module": "Database",
      "functionName": "executeSql",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 77
    }
  },
  {
    "id": "Database_resolve => {\r\n      window.bizMOB.Database.executeSql({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Database_resolve => {\r\n      window.bizMOB.Database.executeSql({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Database.resolve => {\r\n      window.bizMOB.Database.executeSql({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.resolve => {\r\n      window.bizMOB.Database.executeSql({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Database.executeSql({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Database.executeSql({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\nSQL쿼리문을 실행합니다.",
    "metadata": {
      "module": "Database",
      "functionName": "resolve => {\r\n      window.bizMOB.Database.executeSql({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 82
    }
  },
  {
    "id": "Database_openDatabase_chunk_0",
    "parentId": "Database_openDatabase",
    "chunkIndex": 0,
    "title": "Database.openDatabase",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.openDatabase\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nopenDatabase(arg: { _sDbName: string, // 오픈할 대상 데이터베이스 이름 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\nSQLite 데이터베이스를 사용할 수 있도록 열어줍니다.",
    "metadata": {
      "module": "Database",
      "functionName": "openDatabase",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 93
    }
  },
  {
    "id": "Database_resolve => {\r\n      window.bizMOB.Database.openDatabase({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Database_resolve => {\r\n      window.bizMOB.Database.openDatabase({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Database.resolve => {\r\n      window.bizMOB.Database.openDatabase({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.resolve => {\r\n      window.bizMOB.Database.openDatabase({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Database.openDatabase({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Database.openDatabase({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\nSQLite 데이터베이스를 사용할 수 있도록 열어줍니다.",
    "metadata": {
      "module": "Database",
      "functionName": "resolve => {\r\n      window.bizMOB.Database.openDatabase({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 97
    }
  },
  {
    "id": "Database_rollbackTransaction_chunk_0",
    "parentId": "Database_rollbackTransaction",
    "chunkIndex": 0,
    "title": "Database.rollbackTransaction",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.rollbackTransaction\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nrollbackTransaction(arg?: { _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n트랜잭션을 롤백합니다.",
    "metadata": {
      "module": "Database",
      "functionName": "rollbackTransaction",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 108
    }
  },
  {
    "id": "Database_resolve => {\r\n      window.bizMOB.Database.rollbackTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Database_resolve => {\r\n      window.bizMOB.Database.rollbackTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Database.resolve => {\r\n      window.bizMOB.Database.rollbackTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Database.resolve => {\r\n      window.bizMOB.Database.rollbackTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Database.rollbackTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Database.rollbackTransaction({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n트랜잭션을 롤백합니다.",
    "metadata": {
      "module": "Database",
      "functionName": "resolve => {\r\n      window.bizMOB.Database.rollbackTransaction({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Database.ts",
      "line": 111
    }
  },
  {
    "id": "Contacts_get_chunk_0",
    "parentId": "Contacts_get",
    "chunkIndex": 0,
    "title": "Contacts.get",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Contacts.get\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nget(arg: { _sSearchType: '' | 'name' | 'phone', // 주소록 검색 타입. \"\" or name or phone _sSearchText?: string, // 주소록 검색어 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n연락처 조회",
    "metadata": {
      "module": "Contacts",
      "functionName": "get",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Contacts.ts",
      "line": 3
    }
  },
  {
    "id": "Contacts_resolve => {\r\n      window.bizMOB.Contacts.get({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "Contacts_resolve => {\r\n      window.bizMOB.Contacts.get({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "Contacts.resolve => {\r\n      window.bizMOB.Contacts.get({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Contacts.resolve => {\r\n      window.bizMOB.Contacts.get({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.Contacts.get({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.Contacts.get({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n연락처 조회",
    "metadata": {
      "module": "Contacts",
      "functionName": "resolve => {\r\n      window.bizMOB.Contacts.get({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Contacts.ts",
      "line": 8
    }
  },
  {
    "id": "Config_set_chunk_0",
    "parentId": "Config_set",
    "chunkIndex": 0,
    "title": "Config.set",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Config.set\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nset(target: string, className: string, arg: any)\n```\n\n## 설명\nbizMOB Class Config Set",
    "metadata": {
      "module": "Config",
      "functionName": "set",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Config.ts",
      "line": 3
    }
  },
  {
    "id": "Config_get_chunk_0",
    "parentId": "Config_get",
    "chunkIndex": 0,
    "title": "Config.get",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# Config.get\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nget(target: string, className: string)\n```\n\n## 설명\nbizMOB Class Config Set",
    "metadata": {
      "module": "Config",
      "functionName": "get",
      "language": "typescript",
      "source": "libs\\typescript\\core\\Config.ts",
      "line": 8
    }
  },
  {
    "id": "App_callPlugIn_chunk_0",
    "parentId": "App_callPlugIn",
    "chunkIndex": 0,
    "title": "App.callPlugIn",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# App.callPlugIn\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ncallPlugIn(api: string, arg?: { [key: string]: any; _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\nNative 플러그인 호출 API\n\n## 매개변수\n- **api** : Native Call API ID\n- **arg** : call 파라미터\n\n## 반환값",
    "metadata": {
      "module": "App",
      "functionName": "callPlugIn",
      "language": "typescript",
      "source": "libs\\typescript\\core\\App.ts",
      "line": 8
    }
  },
  {
    "id": "App_resolve => {\r\n      window.bizMOB.App.callPlugIn(api, {\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "App_resolve => {\r\n      window.bizMOB.App.callPlugIn(api, {\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "App.resolve => {\r\n      window.bizMOB.App.callPlugIn(api, {\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# App.resolve => {\r\n      window.bizMOB.App.callPlugIn(api, {\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.App.callPlugIn(api, {\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.App.callPlugIn(api, { ...arg, _fCallback: function(res: any)\n```",
    "metadata": {
      "module": "App",
      "functionName": "resolve => {\r\n      window.bizMOB.App.callPlugIn(api, {\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\App.ts",
      "line": 12
    }
  },
  {
    "id": "App_exit_chunk_0",
    "parentId": "App_exit",
    "chunkIndex": 0,
    "title": "App.exit",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# App.exit\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nexit(arg: { _sType: 'exit' | 'kill' | 'logout', // 어플리케이션 종료 유형입니다. kill or exit : 어플리케이션 종료, logout : 어플리케이션 재시작 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n앱 종료",
    "metadata": {
      "module": "App",
      "functionName": "exit",
      "language": "typescript",
      "source": "libs\\typescript\\core\\App.ts",
      "line": 23
    }
  },
  {
    "id": "App_resolve => {\r\n      window.bizMOB.App.exit({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "App_resolve => {\r\n      window.bizMOB.App.exit({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "App.resolve => {\r\n      window.bizMOB.App.exit({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# App.resolve => {\r\n      window.bizMOB.App.exit({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.App.exit({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.App.exit({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n앱 종료",
    "metadata": {
      "module": "App",
      "functionName": "resolve => {\r\n      window.bizMOB.App.exit({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\App.ts",
      "line": 27
    }
  },
  {
    "id": "App_getTimeout_chunk_0",
    "parentId": "App_getTimeout",
    "chunkIndex": 0,
    "title": "App.getTimeout",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# App.getTimeout\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetTimeout(arg?: { _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n세션타임아웃 조회",
    "metadata": {
      "module": "App",
      "functionName": "getTimeout",
      "language": "typescript",
      "source": "libs\\typescript\\core\\App.ts",
      "line": 38
    }
  },
  {
    "id": "App_resolve => {\r\n      window.bizMOB.App.getTimeout({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "App_resolve => {\r\n      window.bizMOB.App.getTimeout({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "App.resolve => {\r\n      window.bizMOB.App.getTimeout({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# App.resolve => {\r\n      window.bizMOB.App.getTimeout({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.App.getTimeout({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.App.getTimeout({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n세션타임아웃 조회",
    "metadata": {
      "module": "App",
      "functionName": "resolve => {\r\n      window.bizMOB.App.getTimeout({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\App.ts",
      "line": 41
    }
  },
  {
    "id": "App_setTimeout_chunk_0",
    "parentId": "App_setTimeout",
    "chunkIndex": 0,
    "title": "App.setTimeout",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# App.setTimeout\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nsetTimeout(arg?: { _nSeconds: number, // 어플리케이션의 자동 종료 시간 값 _bMock?: boolean, // Mock 데이터 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\n세션타임아웃 설정 (분 단위 설정)",
    "metadata": {
      "module": "App",
      "functionName": "setTimeout",
      "language": "typescript",
      "source": "libs\\typescript\\core\\App.ts",
      "line": 52
    }
  },
  {
    "id": "App_resolve => {\r\n      window.bizMOB.App.setTimeout({\r\n        ...arg,\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "App_resolve => {\r\n      window.bizMOB.App.setTimeout({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "App.resolve => {\r\n      window.bizMOB.App.setTimeout({\r\n        ...arg,\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# App.resolve => {\r\n      window.bizMOB.App.setTimeout({\r\n        ...arg,\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.App.setTimeout({\r\n        ...arg,\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.App.setTimeout({ ...arg, _fCallback: function(res: any)\n```\n\n## 설명\n세션타임아웃 설정 (분 단위 설정)",
    "metadata": {
      "module": "App",
      "functionName": "resolve => {\r\n      window.bizMOB.App.setTimeout({\r\n        ...arg,\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\App.ts",
      "line": 56
    }
  },
  {
    "id": "App_hideSplash_chunk_0",
    "parentId": "App_hideSplash",
    "chunkIndex": 0,
    "title": "App.hideSplash",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# App.hideSplash\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nhideSplash()\n```\n\n## 설명\nNative 스플래시 숨김 (스플래시 수동 조작 앱인 경우)",
    "metadata": {
      "module": "App",
      "functionName": "hideSplash",
      "language": "typescript",
      "source": "libs\\typescript\\core\\App.ts",
      "line": 67
    }
  },
  {
    "id": "App_resolve => {\r\n      window.bizMOB.App.hideSplash({\r\n        _fCallback: function(res: any_chunk_0",
    "parentId": "App_resolve => {\r\n      window.bizMOB.App.hideSplash({\r\n        _fCallback: function(res: any",
    "chunkIndex": 0,
    "title": "App.resolve => {\r\n      window.bizMOB.App.hideSplash({\r\n        _fCallback: function(res: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# App.resolve => {\r\n      window.bizMOB.App.hideSplash({\r\n        _fCallback: function(res: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresolve => {\r\n      window.bizMOB.App.hideSplash({\r\n        _fCallback: function(res: any(resolve => { window.bizMOB.App.hideSplash({ _fCallback: function(res: any)\n```\n\n## 설명\nNative 스플래시 숨김 (스플래시 수동 조작 앱인 경우)",
    "metadata": {
      "module": "App",
      "functionName": "resolve => {\r\n      window.bizMOB.App.hideSplash({\r\n        _fCallback: function(res: any",
      "language": "typescript",
      "source": "libs\\typescript\\core\\App.ts",
      "line": 68
    }
  },
  {
    "id": "BzToken_getAccessToken_chunk_0",
    "parentId": "BzToken_getAccessToken",
    "chunkIndex": 0,
    "title": "BzToken.getAccessToken",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzToken.getAccessToken\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetAccessToken(): string | null\n```",
    "metadata": {
      "module": "BzToken",
      "functionName": "getAccessToken",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzToken.ts",
      "line": 32
    }
  },
  {
    "id": "BzToken_getAccessTokenExpTime_chunk_0",
    "parentId": "BzToken_getAccessTokenExpTime",
    "chunkIndex": 0,
    "title": "BzToken.getAccessTokenExpTime",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzToken.getAccessTokenExpTime\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetAccessTokenExpTime(): string | null\n```",
    "metadata": {
      "module": "BzToken",
      "functionName": "getAccessTokenExpTime",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzToken.ts",
      "line": 37
    }
  },
  {
    "id": "BzToken_getRefreshToken_chunk_0",
    "parentId": "BzToken_getRefreshToken",
    "chunkIndex": 0,
    "title": "BzToken.getRefreshToken",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzToken.getRefreshToken\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetRefreshToken(): string | null\n```",
    "metadata": {
      "module": "BzToken",
      "functionName": "getRefreshToken",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzToken.ts",
      "line": 42
    }
  },
  {
    "id": "BzToken_getRefreshTokenExpTime_chunk_0",
    "parentId": "BzToken_getRefreshTokenExpTime",
    "chunkIndex": 0,
    "title": "BzToken.getRefreshTokenExpTime",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzToken.getRefreshTokenExpTime\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetRefreshTokenExpTime(): string | null\n```",
    "metadata": {
      "module": "BzToken",
      "functionName": "getRefreshTokenExpTime",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzToken.ts",
      "line": 47
    }
  },
  {
    "id": "BzToken_renewToken_chunk_0",
    "parentId": "BzToken_renewToken",
    "chunkIndex": 0,
    "title": "BzToken.renewToken",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzToken.renewToken\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nrenewToken(arg?: { _bProgressEnable?: boolean; // Native App Progress 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\nJWT Token 갱신",
    "metadata": {
      "module": "BzToken",
      "functionName": "renewToken",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzToken.ts",
      "line": 75
    }
  },
  {
    "id": "BzToken_isTokenExpired_chunk_0",
    "parentId": "BzToken_isTokenExpired",
    "chunkIndex": 0,
    "title": "BzToken.isTokenExpired",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzToken.isTokenExpired\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nisTokenExpired(): boolean\n```\n\n## 설명\nJwt Token 만료 여부",
    "metadata": {
      "module": "BzToken",
      "functionName": "isTokenExpired",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzToken.ts",
      "line": 133
    }
  },
  {
    "id": "BzLocale_changeLocale_chunk_0",
    "parentId": "BzLocale_changeLocale",
    "chunkIndex": 0,
    "title": "BzLocale.changeLocale",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzLocale.changeLocale\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nchangeLocale(newLocaleCd: string)\n```",
    "metadata": {
      "module": "BzLocale",
      "functionName": "changeLocale",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzLocale.ts",
      "line": 19
    }
  },
  {
    "id": "BzCrypto_getSymKey_chunk_0",
    "parentId": "BzCrypto_getSymKey",
    "chunkIndex": 0,
    "title": "BzCrypto.getSymKey",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzCrypto.getSymKey\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetSymKey(): string | null\n```",
    "metadata": {
      "module": "BzCrypto",
      "functionName": "getSymKey",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzCrypto.ts",
      "line": 62
    }
  },
  {
    "id": "BzCrypto_getCryAuthToken_chunk_0",
    "parentId": "BzCrypto_getCryAuthToken",
    "chunkIndex": 0,
    "title": "BzCrypto.getCryAuthToken",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzCrypto.getCryAuthToken\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetCryAuthToken(): string | null\n```",
    "metadata": {
      "module": "BzCrypto",
      "functionName": "getCryAuthToken",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzCrypto.ts",
      "line": 67
    }
  },
  {
    "id": "BzCrypto_getCryAuthTokenExpTime_chunk_0",
    "parentId": "BzCrypto_getCryAuthTokenExpTime",
    "chunkIndex": 0,
    "title": "BzCrypto.getCryAuthTokenExpTime",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzCrypto.getCryAuthTokenExpTime\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetCryAuthTokenExpTime(): string | null\n```",
    "metadata": {
      "module": "BzCrypto",
      "functionName": "getCryAuthTokenExpTime",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzCrypto.ts",
      "line": 72
    }
  },
  {
    "id": "BzCrypto_getCryRefreshToken_chunk_0",
    "parentId": "BzCrypto_getCryRefreshToken",
    "chunkIndex": 0,
    "title": "BzCrypto.getCryRefreshToken",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzCrypto.getCryRefreshToken\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetCryRefreshToken(): string | null\n```",
    "metadata": {
      "module": "BzCrypto",
      "functionName": "getCryRefreshToken",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzCrypto.ts",
      "line": 77
    }
  },
  {
    "id": "BzCrypto_getCryRefreshTokenExpTime_chunk_0",
    "parentId": "BzCrypto_getCryRefreshTokenExpTime",
    "chunkIndex": 0,
    "title": "BzCrypto.getCryRefreshTokenExpTime",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzCrypto.getCryRefreshTokenExpTime\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetCryRefreshTokenExpTime(): string | null\n```",
    "metadata": {
      "module": "BzCrypto",
      "functionName": "getCryRefreshTokenExpTime",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzCrypto.ts",
      "line": 82
    }
  },
  {
    "id": "BzCrypto_shareAuthKey_chunk_0",
    "parentId": "BzCrypto_shareAuthKey",
    "chunkIndex": 0,
    "title": "BzCrypto.shareAuthKey",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzCrypto.shareAuthKey\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nshareAuthKey(arg?: { _bProgressEnable?: boolean; // Native App Progress 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\nAuth Token 발급",
    "metadata": {
      "module": "BzCrypto",
      "functionName": "shareAuthKey",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzCrypto.ts",
      "line": 109
    }
  },
  {
    "id": "BzCrypto_renewAuthToken_chunk_0",
    "parentId": "BzCrypto_renewAuthToken",
    "chunkIndex": 0,
    "title": "BzCrypto.renewAuthToken",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzCrypto.renewAuthToken\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nrenewAuthToken(arg?: { _bProgressEnable?: boolean; // Native App Progress 사용 여부 }): Promise<Record<string, any>>\n```\n\n## 설명\nAuth Token 갱신",
    "metadata": {
      "module": "BzCrypto",
      "functionName": "renewAuthToken",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzCrypto.ts",
      "line": 178
    }
  },
  {
    "id": "BzCrypto_isTokenRequired_chunk_0",
    "parentId": "BzCrypto_isTokenRequired",
    "chunkIndex": 0,
    "title": "BzCrypto.isTokenRequired",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzCrypto.isTokenRequired\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nisTokenRequired(): boolean\n```\n\n## 설명\nAuth Token 발급 필요 여부",
    "metadata": {
      "module": "BzCrypto",
      "functionName": "isTokenRequired",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzCrypto.ts",
      "line": 233
    }
  },
  {
    "id": "BzCrypto_isTokenExpired_chunk_0",
    "parentId": "BzCrypto_isTokenExpired",
    "chunkIndex": 0,
    "title": "BzCrypto.isTokenExpired",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzCrypto.isTokenExpired\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nisTokenExpired(): boolean\n```\n\n## 설명\nAuth Token 발급 필요 여부",
    "metadata": {
      "module": "BzCrypto",
      "functionName": "isTokenExpired",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzCrypto.ts",
      "line": 238
    }
  },
  {
    "id": "BzCrypto_if_chunk_0",
    "parentId": "BzCrypto_if",
    "chunkIndex": 0,
    "title": "BzCrypto.if",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# BzCrypto.if\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nif(this.cryAuthToken)\n```\n\n## 설명\nAuth Token 만료 여부",
    "metadata": {
      "module": "BzCrypto",
      "functionName": "if",
      "language": "typescript",
      "source": "libs\\typescript\\classes\\BzCrypto.ts",
      "line": 243
    }
  },
  {
    "id": "bizmob.d_set_chunk_0",
    "parentId": "bizmob.d_set",
    "chunkIndex": 0,
    "title": "bizmob.d.set",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.set\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nset(target: string, className: string, arg: any): void;\r\n    get(target: string, className: string): any;\r\n  }\r\n\r\n  // Logger\r\n  interface Logger\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "set",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 3
    }
  },
  {
    "id": "bizmob.d_info_chunk_0",
    "parentId": "bizmob.d_info",
    "chunkIndex": 0,
    "title": "bizmob.d.info",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.info\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ninfo(message: string): void;\r\n    log(message: string): void;\r\n    warn(message: string): void;\r\n    debug(message: string): void;\r\n    error(message: string): void;\r\n  }\r\n\r\n  // Storage\r\n  interface Storage\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "info",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 9
    }
  },
  {
    "id": "bizmob.d_get_chunk_0",
    "parentId": "bizmob.d_get",
    "chunkIndex": 0,
    "title": "bizmob.d.get",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.get\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nget(arg: { _sKey: string }): any;\r\n    remove(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "get",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 18
    }
  },
  {
    "id": "bizmob.d_set_chunk_0",
    "parentId": "bizmob.d_set",
    "chunkIndex": 0,
    "title": "bizmob.d.set",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.set\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nset(arg: { _sKey: string; _vValue: any }): void;\r\n    setList(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "set",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 20
    }
  },
  {
    "id": "bizmob.d_get_chunk_0",
    "parentId": "bizmob.d_get",
    "chunkIndex": 0,
    "title": "bizmob.d.get",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.get\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nget(arg: { _sKey: string }): any;\r\n    remove(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "get",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 27
    }
  },
  {
    "id": "bizmob.d_set_chunk_0",
    "parentId": "bizmob.d_set",
    "chunkIndex": 0,
    "title": "bizmob.d.set",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.set\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nset(arg: { _sKey: string; _vValue: any }): void;\r\n    setList(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "set",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 29
    }
  },
  {
    "id": "bizmob.d_changeLocale_chunk_0",
    "parentId": "bizmob.d_changeLocale",
    "chunkIndex": 0,
    "title": "bizmob.d.changeLocale",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.changeLocale\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nchangeLocale(arg: { _sLocaleCd: string; _bMock?: boolean }): Promise<Record<string, any>>;\r\n\r\n    requestLogin(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "changeLocale",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 38
    }
  },
  {
    "id": "bizmob.d_requestLogin_chunk_0",
    "parentId": "bizmob.d_requestLogin",
    "chunkIndex": 0,
    "title": "bizmob.d.requestLogin",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.requestLogin\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nrequestLogin(arg: { _sUserId: string; _sPassword: string; _sTrcode: string; _oHeader?: Record<string, any>; _oBody?: Record<string, any>; _oHttpHeader?: Record<string, any>; _sQuery?: string; _bProgressEnable?: boolean; _nTimeout?: number; _bMock?: boolean; }): Promise<Record<string, any>>;\r\n\r\n    requestTr(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "requestLogin",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 53
    }
  },
  {
    "id": "bizmob.d_requestTr_chunk_0",
    "parentId": "bizmob.d_requestTr",
    "chunkIndex": 0,
    "title": "bizmob.d.requestTr",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.requestTr\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nrequestTr(arg: { _sTrcode: string; _oHeader?: Record<string, any>; _oBody?: Record<string, any>; _oHttpHeader?: Record<string, any>; _sQuery?: string; _bProgressEnable?: boolean; _nTimeout?: number; _bMock?: boolean; }): Promise<Record<string, any>>;\r\n\r\n    requestHttp(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "requestTr",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 77
    }
  },
  {
    "id": "bizmob.d_requestHttp_chunk_0",
    "parentId": "bizmob.d_requestHttp",
    "chunkIndex": 0,
    "title": "bizmob.d.requestHttp",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.requestHttp\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nrequestHttp(arg: { _sUrl: string; _sMethod: 'GET' | 'POST'; _oHeader?: Record<string, any>; _oBody?: Record<string, any>; _bProgressEnable?: boolean; _nTimeout?: number; _bMock?: boolean; }): Promise<Record<string, any>>;\r\n\r\n    requestApi(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "requestHttp",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 98
    }
  },
  {
    "id": "bizmob.d_requestApi_chunk_0",
    "parentId": "bizmob.d_requestApi",
    "chunkIndex": 0,
    "title": "bizmob.d.requestApi",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.requestApi\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nrequestApi(arg: { _sMethod: 'GET' | 'POST'; _sUrl: string; _nTimeout?: number; _nRetries?: number; _oHeader?: Record<string, any>; _oBody?: any; }): Promise<Record<string, any>>;\r\n  }\r\n\r\n  // App\r\n  interface App\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "requestApi",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 117
    }
  },
  {
    "id": "bizmob.d_callPlugIn_chunk_0",
    "parentId": "bizmob.d_callPlugIn",
    "chunkIndex": 0,
    "title": "bizmob.d.callPlugIn",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.callPlugIn\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ncallPlugIn(api: string, options?: { [key: string]: any; _bMock?: boolean }): Promise<Record<string, any>>;\r\n    exit(options?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "callPlugIn",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 136
    }
  },
  {
    "id": "bizmob.d_getTimeout_chunk_0",
    "parentId": "bizmob.d_getTimeout",
    "chunkIndex": 0,
    "title": "bizmob.d.getTimeout",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.getTimeout\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetTimeout(options?: { _bMock?: boolean }): Promise<Record<string, any>>;\r\n    setTimeout(options?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "getTimeout",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 138
    }
  },
  {
    "id": "bizmob.d_hideSplash_chunk_0",
    "parentId": "bizmob.d_hideSplash",
    "chunkIndex": 0,
    "title": "bizmob.d.hideSplash",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.hideSplash\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nhideSplash(): Promise<Record<string, any>>;\r\n  }\r\n\r\n  // Device\r\n  interface Device\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "hideSplash",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 140
    }
  },
  {
    "id": "bizmob.d_getInfo_chunk_0",
    "parentId": "bizmob.d_getInfo",
    "chunkIndex": 0,
    "title": "bizmob.d.getInfo",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.getInfo\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetInfo(): any;\r\n    getInfo(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "getInfo",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 145
    }
  },
  {
    "id": "bizmob.d_isApp_chunk_0",
    "parentId": "bizmob.d_isApp",
    "chunkIndex": 0,
    "title": "bizmob.d.isApp",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.isApp\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nisApp(): boolean;\r\n    isWeb(): boolean;\r\n    isMobile(): boolean;\r\n    isPC(): boolean;\r\n    isAndroid(): boolean;\r\n    isIOS(): boolean;\r\n    isTablet(): boolean;\r\n    isPhone(): boolean;\r\n  }\r\n\r\n  // File\r\n  interface File\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "isApp",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 147
    }
  },
  {
    "id": "bizmob.d_copy_chunk_0",
    "parentId": "bizmob.d_copy",
    "chunkIndex": 0,
    "title": "bizmob.d.copy",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.copy\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ncopy(arg?: { _sSourcePath: string; _sTargetPath: string; _bMock?: boolean }): Promise<Record<string, any>>;\r\n    directory(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "copy",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 195
    }
  },
  {
    "id": "bizmob.d_download_chunk_0",
    "parentId": "bizmob.d_download",
    "chunkIndex": 0,
    "title": "bizmob.d.download",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.download\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ndownload(arg?: { _aFileList: { _sURI: string; _bOverwrite: boolean; _sFileName: string; _sDirectory: string }[]; _sMode: 'foreground' | 'background'; _sProgressBar: 'off' | 'each' | 'full'; _bMock?: boolean; }): Promise<Record<string, any>>;\r\n    exist(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "download",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 197
    }
  },
  {
    "id": "bizmob.d_getInfo_chunk_0",
    "parentId": "bizmob.d_getInfo",
    "chunkIndex": 0,
    "title": "bizmob.d.getInfo",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.getInfo\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetInfo(arg?: { _aFileList: { _sSourcePath: string }[]; _bMock?: boolean }): Promise<Record<string, any>[]>;\r\n    move(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "getInfo",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 204
    }
  },
  {
    "id": "bizmob.d_open_chunk_0",
    "parentId": "bizmob.d_open",
    "chunkIndex": 0,
    "title": "bizmob.d.open",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.open\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nopen(arg?: { _sSourcePath: string; _bMock?: boolean }): Promise<Record<string, any>>;\r\n    remove(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "open",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 206
    }
  },
  {
    "id": "bizmob.d_resizeImage_chunk_0",
    "parentId": "bizmob.d_resizeImage",
    "chunkIndex": 0,
    "title": "bizmob.d.resizeImage",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.resizeImage\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nresizeImage(arg?: { _aFileList: { _sSourcePath: string }[]; _bIsCopy: boolean; _sTargetDirectory: string; _nCompressRate: number; _nWidth: number; _nHeight: number; _bMock?: boolean; }): Promise<Record<string, any>>;\r\n    rotateImage(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "resizeImage",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 208
    }
  },
  {
    "id": "bizmob.d_unzip_chunk_0",
    "parentId": "bizmob.d_unzip",
    "chunkIndex": 0,
    "title": "bizmob.d.unzip",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.unzip\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nunzip(arg?: { _sSourcePath: string; _sDirectory: string; _bMock?: boolean }): Promise<Record<string, any>>;\r\n    upload(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "unzip",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 223
    }
  },
  {
    "id": "bizmob.d_zip_chunk_0",
    "parentId": "bizmob.d_zip",
    "chunkIndex": 0,
    "title": "bizmob.d.zip",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.zip\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nzip(arg?: { _sSourcePath: string; _sTargetPath: string; _bMock?: boolean }): Promise<Record<string, any>>;\r\n  }\r\n\r\n  // Push\r\n  interface Push\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "zip",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 225
    }
  },
  {
    "id": "bizmob.d_getAlarm_chunk_0",
    "parentId": "bizmob.d_getAlarm",
    "chunkIndex": 0,
    "title": "bizmob.d.getAlarm",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.getAlarm\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetAlarm(arg?: { _sUserId: string; _bProgressEnable?: boolean; _bMock?: boolean }): Promise<Record<string, any>>;\r\n    getMessageList(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "getAlarm",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 243
    }
  },
  {
    "id": "bizmob.d_getPushKey_chunk_0",
    "parentId": "bizmob.d_getPushKey",
    "chunkIndex": 0,
    "title": "bizmob.d.getPushKey",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.getPushKey\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetPushKey(arg?: { _bProgressEnable?: boolean; _bMock?: boolean }): Promise<Record<string, any>>;\r\n    getUnreadCount(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "getPushKey",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 245
    }
  },
  {
    "id": "bizmob.d_readMessage_chunk_0",
    "parentId": "bizmob.d_readMessage",
    "chunkIndex": 0,
    "title": "bizmob.d.readMessage",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.readMessage\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nreadMessage(arg?: { _sTrxDay: string; _sTrxId: string; _sUserId: string; _bProgressEnable?: boolean; _bMock?: boolean }): Promise<Record<string, any>>;\r\n    readReceiptMessage(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "readMessage",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 247
    }
  },
  {
    "id": "bizmob.d_registerToServer_chunk_0",
    "parentId": "bizmob.d_registerToServer",
    "chunkIndex": 0,
    "title": "bizmob.d.registerToServer",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.registerToServer\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nregisterToServer(arg?: { _sServerType: 'bizpush' | 'push'; _sUserId: string; _sAppName: string; _bProgressEnable?: boolean; _bMock?: boolean }): Promise<Record<string, any>>;\r\n    reset(): Promise<Record<string, any>>;\r\n    sendMessage(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "registerToServer",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 249
    }
  },
  {
    "id": "bizmob.d_setAlarm_chunk_0",
    "parentId": "bizmob.d_setAlarm",
    "chunkIndex": 0,
    "title": "bizmob.d.setAlarm",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.setAlarm\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nsetAlarm(arg?: { _sUserId: string; _bEnabled: boolean; _bProgressEnable?: boolean; _bMock?: boolean }): Promise<Record<string, any>>;\r\n    setBadgeCount(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "setAlarm",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 252
    }
  },
  {
    "id": "bizmob.d_callBrowser_chunk_0",
    "parentId": "bizmob.d_callBrowser",
    "chunkIndex": 0,
    "title": "bizmob.d.callBrowser",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.callBrowser\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ncallBrowser(arg?: { _sURL: string; _bMock?: boolean }): Promise<void>;\r\n    callCamera(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "callBrowser",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 267
    }
  },
  {
    "id": "bizmob.d_callGallery_chunk_0",
    "parentId": "bizmob.d_callGallery",
    "chunkIndex": 0,
    "title": "bizmob.d.callGallery",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.callGallery\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ncallGallery(arg?: { _sType: 'all' | 'image' | 'video'; _nMaxCount?: number; _bMock?: boolean }): Promise<Record<string, any>>;\r\n    callMap(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "callGallery",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 269
    }
  },
  {
    "id": "bizmob.d_callSMS_chunk_0",
    "parentId": "bizmob.d_callSMS",
    "chunkIndex": 0,
    "title": "bizmob.d.callSMS",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.callSMS\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ncallSMS(arg?: { _aNumber: string[]; _sMessage?: string; _bMock?: boolean }): Promise<Record<string, any>>;\r\n    callTEL(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "callSMS",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 271
    }
  },
  {
    "id": "bizmob.d_getGPS_chunk_0",
    "parentId": "bizmob.d_getGPS",
    "chunkIndex": 0,
    "title": "bizmob.d.getGPS",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.getGPS\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetGPS(arg?: { _bMock?: boolean }): Promise<Record<string, any>>;\r\n  }\r\n\r\n  // Window\r\n  interface Window\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "getGPS",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 273
    }
  },
  {
    "id": "bizmob.d_openSignPad_chunk_0",
    "parentId": "bizmob.d_openSignPad",
    "chunkIndex": 0,
    "title": "bizmob.d.openSignPad",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.openSignPad\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nopenSignPad(arg?: { _sTargetPath: string; _bMock?: boolean }): Promise<Record<string, any>>;\r\n    openCodeReader(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "openSignPad",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 284
    }
  },
  {
    "id": "bizmob.d_openFileExplorer_chunk_0",
    "parentId": "bizmob.d_openFileExplorer",
    "chunkIndex": 0,
    "title": "bizmob.d.openFileExplorer",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.openFileExplorer\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nopenFileExplorer(arg?: { _bMock?: boolean }): Promise<Record<string, any>>;\r\n    openImageViewer(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "openFileExplorer",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 286
    }
  },
  {
    "id": "bizmob.d_get_chunk_0",
    "parentId": "bizmob.d_get",
    "chunkIndex": 0,
    "title": "bizmob.d.get",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.get\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nget(arg?: { _sSearchType: '' | 'name' | 'phone'; _sSearchText?: string; _bMock?: boolean }): Promise<Record<string, any>>;\r\n  }\r\n\r\n  // Event\r\n  interface Event\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "get",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 295
    }
  },
  {
    "id": "bizmob.d_setEvent_chunk_0",
    "parentId": "bizmob.d_setEvent",
    "chunkIndex": 0,
    "title": "bizmob.d.setEvent",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.setEvent\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nsetEvent(sEvent: string, fCallback: any): void;\r\n    clearEvent(sEvent: string): void;\r\n  }\r\n\r\n  // Database\r\n  interface Database\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "setEvent",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 300
    }
  },
  {
    "id": "bizmob.d_beginTransaction_chunk_0",
    "parentId": "bizmob.d_beginTransaction",
    "chunkIndex": 0,
    "title": "bizmob.d.beginTransaction",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.beginTransaction\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nbeginTransaction(arg?: { _bMock?: boolean }): Promise<Record<string, any>>;\r\n\r\n    closeDatabase(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "beginTransaction",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 309
    }
  },
  {
    "id": "bizmob.d_closeDatabase_chunk_0",
    "parentId": "bizmob.d_closeDatabase",
    "chunkIndex": 0,
    "title": "bizmob.d.closeDatabase",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.closeDatabase\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ncloseDatabase(arg?: { _bMock?: boolean }): Promise<Record<string, any>>;\r\n\r\n    commitTransaction(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "closeDatabase",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 312
    }
  },
  {
    "id": "bizmob.d_commitTransaction_chunk_0",
    "parentId": "bizmob.d_commitTransaction",
    "chunkIndex": 0,
    "title": "bizmob.d.commitTransaction",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.commitTransaction\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ncommitTransaction(arg?: { _bMock?: boolean }): Promise<Record<string, any>>;\r\n\r\n    executeBatchSql(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "commitTransaction",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 315
    }
  },
  {
    "id": "bizmob.d_executeBatchSql_chunk_0",
    "parentId": "bizmob.d_executeBatchSql",
    "chunkIndex": 0,
    "title": "bizmob.d.executeBatchSql",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.executeBatchSql\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nexecuteBatchSql(arg: { _sQuery: string; _aBindingValues?: string; _bMock?: boolean }): Promise<Record<string, any>>;\r\n\r\n    executeSelect(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "executeBatchSql",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 318
    }
  },
  {
    "id": "bizmob.d_executeSelect_chunk_0",
    "parentId": "bizmob.d_executeSelect",
    "chunkIndex": 0,
    "title": "bizmob.d.executeSelect",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.executeSelect\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nexecuteSelect(arg: { _sQuery: string; _aBindingValues?: string; _bMock?: boolean }): Promise<Record<string, any>>;\r\n\r\n    executeSql(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "executeSelect",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 321
    }
  },
  {
    "id": "bizmob.d_executeSql_chunk_0",
    "parentId": "bizmob.d_executeSql",
    "chunkIndex": 0,
    "title": "bizmob.d.executeSql",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.executeSql\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nexecuteSql(arg: { _sQuery: string; _aBindingValues?: string; _bMock?: boolean }): Promise<Record<string, any>>;\r\n\r\n    openDatabase(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "executeSql",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 324
    }
  },
  {
    "id": "bizmob.d_openDatabase_chunk_0",
    "parentId": "bizmob.d_openDatabase",
    "chunkIndex": 0,
    "title": "bizmob.d.openDatabase",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.openDatabase\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nopenDatabase(arg?: { _sDbName: string; _bMock?: boolean }): Promise<Record<string, any>>;\r\n\r\n    rollbackTransaction(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "openDatabase",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 327
    }
  },
  {
    "id": "bizmob.d_rollbackTransaction_chunk_0",
    "parentId": "bizmob.d_rollbackTransaction",
    "chunkIndex": 0,
    "title": "bizmob.d.rollbackTransaction",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.rollbackTransaction\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nrollbackTransaction(arg?: { _bMock?: boolean }): Promise<Record<string, any>>;\r\n  }\r\n\r\n  // Localization\r\n  interface Localization\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "rollbackTransaction",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 330
    }
  },
  {
    "id": "bizmob.d_getLocale_chunk_0",
    "parentId": "bizmob.d_getLocale",
    "chunkIndex": 0,
    "title": "bizmob.d.getLocale",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.getLocale\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ngetLocale(arg?: { _bMock?: boolean }): Promise<Record<string, any>>;\r\n    setLocale(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "getLocale",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 339
    }
  },
  {
    "id": "bizmob.d_request_chunk_0",
    "parentId": "bizmob.d_request",
    "chunkIndex": 0,
    "title": "bizmob.d.request",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.request\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nrequest(arg: any): any;\r\n  }\r\n}\r\n\r\ndeclare global\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "request",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 345
    }
  },
  {
    "id": "bizmob.d_target: string, className: string, arg: any_chunk_0",
    "parentId": "bizmob.d_target: string, className: string, arg: any",
    "chunkIndex": 0,
    "title": "bizmob.d.target: string, className: string, arg: any",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.target: string, className: string, arg: any\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ntarget: string, className: string, arg: any(void; getConfig(target: string, className: string): any; // Event 함수들 setEvent(sEvent: string, fCallback: any): void; clearEvent(sEvent: string): void; // 모듈들 App: bizMOB.App; Config: bizMOB.Config; Contacts: bizMOB.Contacts; Database: bizMOB.Database; Device: bizMOB.Device; Event: bizMOB.Event; File: bizMOB.File; Http: bizMOB.Http; Localization: bizMOB.Localization; Logger: bizMOB.Logger; Network: bizMOB.Network; Properties: bizMOB.Properties; Push: bizMOB.Push; Storage: bizMOB.Storage; System: bizMOB.System; Window: bizMOB.Window; }; } } // BzClass 타입 정의 declare namespace BzClass)\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "target: string, className: string, arg: any",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 353
    }
  },
  {
    "id": "bizmob.d_isInit_chunk_0",
    "parentId": "bizmob.d_isInit",
    "chunkIndex": 0,
    "title": "bizmob.d.isInit",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.isInit\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nisInit(): boolean;\r\n\r\n    // 암호화 키 조회\r\n    getSymKey(): string | null;\r\n\r\n    // 인증 토큰 조회\r\n    getCryAuthToken(): string | null;\r\n\r\n    // 인증 토큰 만료 시간 조회\r\n    getCryAuthTokenExpTime(): string | null;\r\n\r\n    // 갱신 토큰 조회\r\n    getCryRefreshToken(): string | null;\r\n\r\n    // 갱신 토큰 만료 시간 조회\r\n    getCryRefreshTokenExpTime(): string | null;\r\n\r\n    // BzCrypto 초기화\r\n    init(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "isInit",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 386
    }
  },
  {
    "id": "bizmob.d_shareAuthKey_chunk_0",
    "parentId": "bizmob.d_shareAuthKey",
    "chunkIndex": 0,
    "title": "bizmob.d.shareAuthKey",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.shareAuthKey\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nshareAuthKey(arg?: { _bProgressEnable?: boolean; }): Promise<Record<string, any>>;\r\n\r\n    // Auth Token 갱신\r\n    renewAuthToken(arg?:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "shareAuthKey",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 413
    }
  },
  {
    "id": "bizmob.d_isTokenRequired_chunk_0",
    "parentId": "bizmob.d_isTokenRequired",
    "chunkIndex": 0,
    "title": "bizmob.d.isTokenRequired",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.isTokenRequired\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nisTokenRequired(): boolean;\r\n\r\n    // Auth Token 만료 여부\r\n    isTokenExpired(): boolean;\r\n  }\r\n\r\n  // BzToken 클래스\r\n  interface BzToken\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "isTokenRequired",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 423
    }
  },
  {
    "id": "bizmob.d_isInit_chunk_0",
    "parentId": "bizmob.d_isInit",
    "chunkIndex": 0,
    "title": "bizmob.d.isInit",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.isInit\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nisInit(): boolean;\r\n\r\n    // 인증 토큰 조회\r\n    getAccessToken(): string | null;\r\n\r\n    // 인증 토큰 만료 시간 조회\r\n    getAccessTokenExpTime(): string | null;\r\n\r\n    // 갱신 토큰 조회\r\n    getRefreshToken(): string | null;\r\n\r\n    // 갱신 토큰 만료 시간 조회\r\n    getRefreshTokenExpTime(): string | null;\r\n\r\n    // JWT Token 저장\r\n    init(arg:\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "isInit",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 432
    }
  },
  {
    "id": "bizmob.d_renewToken_chunk_0",
    "parentId": "bizmob.d_renewToken",
    "chunkIndex": 0,
    "title": "bizmob.d.renewToken",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.renewToken\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\nrenewToken(arg?: { _bProgressEnable?: boolean; }): Promise<Record<string, any>>;\r\n\r\n    // JWT Token 만료 여부\r\n    isTokenExpired(): boolean;\r\n  }\r\n\r\n  // BzLocale 클래스\r\n  interface BzLocale\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "renewToken",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 455
    }
  },
  {
    "id": "bizmob.d_initLocale_chunk_0",
    "parentId": "bizmob.d_initLocale",
    "chunkIndex": 0,
    "title": "bizmob.d.initLocale",
    "type": "function",
    "category": "typescript",
    "language": "typescript",
    "content": "# bizmob.d.initLocale\n\n🟦 **언어**: TYPESCRIPT\n\n## 함수 시그니처\n```typescript\ninitLocale(): Promise<void>;\r\n\r\n    // 현재 로케일 조회\r\n    getLocale(): Promise<any>;\r\n\r\n    // 로케일 변경\r\n    changeLocale(newLocaleCd: string): void;\r\n  }\r\n}\r\n\r\n// BzClass들을 전역에서 사용할 수 있도록 선언\r\ndeclare global\n```",
    "metadata": {
      "module": "bizmob.d",
      "functionName": "initLocale",
      "language": "typescript",
      "source": "libs\\typescript\\types\\bizmob.d.ts",
      "line": 466
    }
  }
]
